name: message
returns: void
description: |
  This function prints its argument to stdout.

  The optional `status` kwarg can be used to print a status,
  similar to how meson prints it's own check results. If the
  status argument is used, the `Message:` prefix will be omitted
  and a colon will be added after the message and before the status.

  The `extra_info` can be used together with the `status` to print
  additional information relevant to the status, like a version number
  or failure reason, etc.

example: |
  ```meson
  message('Found usable MinGW version', status: true, extra_info: '10.0')
  ```

  Output:
  ```
  Found usable MinGW version: YES (10.0)
  ```

arg_flattening: false

posargs:
  text:
    type: str | int | bool | list[str | int | bool] | dict[str | int | bool]
    description: The message to print.

varargs:
  name: more_text
  since: 0.54.0
  type: str | int | bool | list[str | int | bool] | dict[str | int | bool]
  description: Additional text that will be printed separated by spaces.

kwargs:
  status:
    type: bool
    since: 0.63.0
    description: Status to print as YES/NO after the message.
  extra_info:
    type: str
    since: 0.63.0
    description: |
      Additional info to print in parentheses after the status.
      It can not be used without the status kwarg.
